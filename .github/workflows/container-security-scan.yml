name: Container Security Scanning

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  static-scan:
    name: Static Scan with Trivy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          echo "$(pwd)/bin" >> $GITHUB_PATH

      - name: Verify Trivy Installation
        run: trivy --version

      - name: Pull Vulnerable Image
        run: docker pull vulnerables/web-dvwa:latest

      - name: Run Trivy Scan
        run: trivy image vulnerables/web-dvwa:latest > trivy-report.txt

      - name: Upload Trivy Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.txt

        
  dynamic-scan:
    name: Dynamic Scan with Falco
    runs-on: ubuntu-latest
    steps:
      - name: Setup Kubernetes Cluster (using kind)
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          kind create cluster

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Install Falco
        run: |
          helm repo add falcosecurity https://falcosecurity.github.io/charts
          helm repo update
          helm install falco falcosecurity/falco --namespace falco --create-namespace

      - name: Create Service Account
        run: |
          kubectl create serviceaccount test-sa -n falco
          kubectl create clusterrolebinding test-sa-binding \
            --clusterrole=cluster-admin \
            --serviceaccount=falco:test-sa

      - name: Deploy Vulnerable Application
        run: |
          kubectl create deployment vulnerable-app \
            --image=vulnerables/web-dvwa:latest \
            -n falco
          kubectl patch deployment vulnerable-app \
            -n falco \
            --patch '{"spec": {"template": {"spec": {"serviceAccountName": "test-sa"}}}}'

      - name: Wait for Application to Start
        run: |
          kubectl rollout status deployment/vulnerable-app -n falco

      - name: Simulate Events for Falco
        run: |
          POD_NAME=$(kubectl get pods -n falco -l app=vulnerable-app -o jsonpath="{.items[0].metadata.name}")
          # Simulate file access event
          kubectl exec -it $POD_NAME -n falco -- sh -c "cat /etc/shadow" || true
          # Simulate interactive shell event
          kubectl exec -it $POD_NAME -n falco -- sh || true
          # Simulate suspicious file creation
          kubectl exec -it $POD_NAME -n falco -- sh -c "touch /etc/suspicious-file" || true

      - name: Collect Falco Logs
        run: |
          kubectl logs -n falco -l app=falco > falco-logs.txt
        continue-on-error: true

      - name: Upload Falco Logs as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: falco-logs
          path: falco-logs.txt
